name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        id: cache-deps
        uses: ./.github/actions/cached-deps #root level of project
        with:
          caching: "false"
          logs: "adiel"
      - name: Output information
        run: echo "Cache used? ${{steps.cache-deps.outputs.used-cache}}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps #root level of project
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps #root level of project
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: us-east-1
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Get AWS Permission
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::262770822872:oidc-provider/token.actions.githubusercontent.com
          aws-region: ${{ env.AWS_REGION }}
      - name: Deploy site
        id: deploy
        # uses: ./.github/actions/deploy-s3-javascript #deploy by JS
        uses: ./.github/actions/deploy-s3-docker #deploy by docker
        # env: #replaced by OpenID-AWS
        #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: ofir-gha-custom-action-hosting
          bucket-region: ${{ env.AWS_REGION }}
          dist-folder: ./dist
      - name: Output website URL
        run: |
          echo "Live URL: ${{steps.deploy.outputs.website-url}}"
